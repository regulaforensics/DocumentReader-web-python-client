# coding: utf-8

"""
    Generated by: https://openapi-generator.tech
"""

import pprint
import re  # noqa: F401

import six

from regula.documentreader.webclient.gen.configuration import Configuration
# this line was added to enable pycharm type hinting
from regula.documentreader.webclient.gen.models import *


"""
Structure is used for storing the results of one bar-code module reading.
"""
class BinaryData(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'rfid_authentication_info': 'dict(str, object)',
        'rfid_mifare_data_validity': 'dict(str, object)',
        'rfid_mifare_data': 'dict(str, object)',
        'rfid_ef_com': 'dict(str, object)',
        'rfid_dg1': 'RfidDG1',
        'rfid_dg2': 'dict(str, object)',
        'rfid_dg3': 'dict(str, object)',
        'rfid_dg4': 'dict(str, object)',
        'rfid_dg5': 'dict(str, object)',
        'rfid_dg6': 'dict(str, object)',
        'rfid_dg7': 'dict(str, object)',
        'rfid_dg8': 'dict(str, object)',
        'rfid_dg9': 'dict(str, object)',
        'rfid_dg10': 'dict(str, object)',
        'rfid_dg11': 'dict(str, object)',
        'rfid_dg12': 'dict(str, object)',
        'rfid_dg13': 'dict(str, object)',
        'rfid_dg14': 'dict(str, object)',
        'rfid_dg15': 'dict(str, object)',
        'rfid_dg16': 'dict(str, object)',
        'rfid_ef_sod': 'dict(str, object)',
        'e_id_dg1': 'dict(str, object)',
        'e_id_dg2': 'dict(str, object)',
        'e_id_dg3': 'dict(str, object)',
        'e_id_dg4': 'dict(str, object)',
        'e_id_dg5': 'dict(str, object)',
        'e_id_dg6': 'dict(str, object)',
        'e_id_dg7': 'dict(str, object)',
        'e_id_dg8': 'dict(str, object)',
        'e_id_dg9': 'dict(str, object)',
        'e_id_dg10': 'dict(str, object)',
        'e_id_dg11': 'dict(str, object)',
        'e_id_dg12': 'dict(str, object)',
        'e_id_dg13': 'dict(str, object)',
        'e_id_dg14': 'dict(str, object)',
        'e_id_dg15': 'dict(str, object)',
        'e_id_dg16': 'dict(str, object)',
        'e_id_dg17': 'dict(str, object)',
        'e_id_dg18': 'dict(str, object)',
        'e_id_dg19': 'dict(str, object)',
        'e_id_dg20': 'dict(str, object)',
        'e_id_dg21': 'dict(str, object)',
        'e_dl_com': 'dict(str, object)',
        'e_dl_sod': 'dict(str, object)',
        'e_dl_dg1': 'dict(str, object)',
        'e_dl_dg2': 'dict(str, object)',
        'e_dl_dg3': 'dict(str, object)',
        'e_dl_dg4': 'dict(str, object)',
        'e_dl_dg5': 'dict(str, object)',
        'e_dl_dg6': 'dict(str, object)',
        'e_dl_dg7': 'dict(str, object)',
        'e_dl_dg8': 'dict(str, object)',
        'e_dl_dg9': 'dict(str, object)',
        'e_dl_dg10': 'dict(str, object)',
        'e_dl_dg11': 'dict(str, object)',
        'e_dl_dg12': 'dict(str, object)',
        'e_dl_dg13': 'dict(str, object)',
        'e_dl_dg14': 'dict(str, object)',
        'visible_digital_seal': 'dict(str, object)',
        'visible_digital_seal_nc': 'dict(str, object)',
        'digital_signature': 'dict(str, object)',
        'rfid_session_data': 'RfidSessionData',
        'rfid_session_data_status': 'DetailsRFID',
        'rfid_e_passp_directory': 'list[RfidDataFileType]'
    }

    attribute_map = {
        'rfid_authentication_info': 'RFID_Authentication_Info',
        'rfid_mifare_data_validity': 'RFID_MIFARE_Data_Validity',
        'rfid_mifare_data': 'RFID_MIFARE_Data',
        'rfid_ef_com': 'RFID_EF_COM',
        'rfid_dg1': 'RFID_DG1',
        'rfid_dg2': 'RFID_DG2',
        'rfid_dg3': 'RFID_DG3',
        'rfid_dg4': 'RFID_DG4',
        'rfid_dg5': 'RFID_DG5',
        'rfid_dg6': 'RFID_DG6',
        'rfid_dg7': 'RFID_DG7',
        'rfid_dg8': 'RFID_DG8',
        'rfid_dg9': 'RFID_DG9',
        'rfid_dg10': 'RFID_DG10',
        'rfid_dg11': 'RFID_DG11',
        'rfid_dg12': 'RFID_DG12',
        'rfid_dg13': 'RFID_DG13',
        'rfid_dg14': 'RFID_DG14',
        'rfid_dg15': 'RFID_DG15',
        'rfid_dg16': 'RFID_DG16',
        'rfid_ef_sod': 'RFID_EF_SOD',
        'e_id_dg1': 'eID_DG1',
        'e_id_dg2': 'eID_DG2',
        'e_id_dg3': 'eID_DG3',
        'e_id_dg4': 'eID_DG4',
        'e_id_dg5': 'eID_DG5',
        'e_id_dg6': 'eID_DG6',
        'e_id_dg7': 'eID_DG7',
        'e_id_dg8': 'eID_DG8',
        'e_id_dg9': 'eID_DG9',
        'e_id_dg10': 'eID_DG10',
        'e_id_dg11': 'eID_DG11',
        'e_id_dg12': 'eID_DG12',
        'e_id_dg13': 'eID_DG13',
        'e_id_dg14': 'eID_DG14',
        'e_id_dg15': 'eID_DG15',
        'e_id_dg16': 'eID_DG16',
        'e_id_dg17': 'eID_DG17',
        'e_id_dg18': 'eID_DG18',
        'e_id_dg19': 'eID_DG19',
        'e_id_dg20': 'eID_DG20',
        'e_id_dg21': 'eID_DG21',
        'e_dl_com': 'eDL_COM',
        'e_dl_sod': 'eDL_SOD',
        'e_dl_dg1': 'eDL_DG1',
        'e_dl_dg2': 'eDL_DG2',
        'e_dl_dg3': 'eDL_DG3',
        'e_dl_dg4': 'eDL_DG4',
        'e_dl_dg5': 'eDL_DG5',
        'e_dl_dg6': 'eDL_DG6',
        'e_dl_dg7': 'eDL_DG7',
        'e_dl_dg8': 'eDL_DG8',
        'e_dl_dg9': 'eDL_DG9',
        'e_dl_dg10': 'eDL_DG10',
        'e_dl_dg11': 'eDL_DG11',
        'e_dl_dg12': 'eDL_DG12',
        'e_dl_dg13': 'eDL_DG13',
        'e_dl_dg14': 'eDL_DG14',
        'visible_digital_seal': 'Visible_Digital_Seal',
        'visible_digital_seal_nc': 'Visible_Digital_Seal_NC',
        'digital_signature': 'Digital_Signature',
        'rfid_session_data': 'RFID_Session_Data',
        'rfid_session_data_status': 'RFID_Session_Data_Status',
        'rfid_e_passp_directory': 'RFID_ePassp_Directory'
    }

    def __init__(self, rfid_authentication_info=None, rfid_mifare_data_validity=None, rfid_mifare_data=None, rfid_ef_com=None, rfid_dg1=None, rfid_dg2=None, rfid_dg3=None, rfid_dg4=None, rfid_dg5=None, rfid_dg6=None, rfid_dg7=None, rfid_dg8=None, rfid_dg9=None, rfid_dg10=None, rfid_dg11=None, rfid_dg12=None, rfid_dg13=None, rfid_dg14=None, rfid_dg15=None, rfid_dg16=None, rfid_ef_sod=None, e_id_dg1=None, e_id_dg2=None, e_id_dg3=None, e_id_dg4=None, e_id_dg5=None, e_id_dg6=None, e_id_dg7=None, e_id_dg8=None, e_id_dg9=None, e_id_dg10=None, e_id_dg11=None, e_id_dg12=None, e_id_dg13=None, e_id_dg14=None, e_id_dg15=None, e_id_dg16=None, e_id_dg17=None, e_id_dg18=None, e_id_dg19=None, e_id_dg20=None, e_id_dg21=None, e_dl_com=None, e_dl_sod=None, e_dl_dg1=None, e_dl_dg2=None, e_dl_dg3=None, e_dl_dg4=None, e_dl_dg5=None, e_dl_dg6=None, e_dl_dg7=None, e_dl_dg8=None, e_dl_dg9=None, e_dl_dg10=None, e_dl_dg11=None, e_dl_dg12=None, e_dl_dg13=None, e_dl_dg14=None, visible_digital_seal=None, visible_digital_seal_nc=None, digital_signature=None, rfid_session_data=None, rfid_session_data_status=None, rfid_e_passp_directory=None, local_vars_configuration=None):  # noqa: E501
        """BinaryData - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._rfid_authentication_info = None
        self._rfid_mifare_data_validity = None
        self._rfid_mifare_data = None
        self._rfid_ef_com = None
        self._rfid_dg1 = None
        self._rfid_dg2 = None
        self._rfid_dg3 = None
        self._rfid_dg4 = None
        self._rfid_dg5 = None
        self._rfid_dg6 = None
        self._rfid_dg7 = None
        self._rfid_dg8 = None
        self._rfid_dg9 = None
        self._rfid_dg10 = None
        self._rfid_dg11 = None
        self._rfid_dg12 = None
        self._rfid_dg13 = None
        self._rfid_dg14 = None
        self._rfid_dg15 = None
        self._rfid_dg16 = None
        self._rfid_ef_sod = None
        self._e_id_dg1 = None
        self._e_id_dg2 = None
        self._e_id_dg3 = None
        self._e_id_dg4 = None
        self._e_id_dg5 = None
        self._e_id_dg6 = None
        self._e_id_dg7 = None
        self._e_id_dg8 = None
        self._e_id_dg9 = None
        self._e_id_dg10 = None
        self._e_id_dg11 = None
        self._e_id_dg12 = None
        self._e_id_dg13 = None
        self._e_id_dg14 = None
        self._e_id_dg15 = None
        self._e_id_dg16 = None
        self._e_id_dg17 = None
        self._e_id_dg18 = None
        self._e_id_dg19 = None
        self._e_id_dg20 = None
        self._e_id_dg21 = None
        self._e_dl_com = None
        self._e_dl_sod = None
        self._e_dl_dg1 = None
        self._e_dl_dg2 = None
        self._e_dl_dg3 = None
        self._e_dl_dg4 = None
        self._e_dl_dg5 = None
        self._e_dl_dg6 = None
        self._e_dl_dg7 = None
        self._e_dl_dg8 = None
        self._e_dl_dg9 = None
        self._e_dl_dg10 = None
        self._e_dl_dg11 = None
        self._e_dl_dg12 = None
        self._e_dl_dg13 = None
        self._e_dl_dg14 = None
        self._visible_digital_seal = None
        self._visible_digital_seal_nc = None
        self._digital_signature = None
        self._rfid_session_data = None
        self._rfid_session_data_status = None
        self._rfid_e_passp_directory = None
        self.discriminator = None

        if rfid_authentication_info is not None:
            self.rfid_authentication_info = rfid_authentication_info
        if rfid_mifare_data_validity is not None:
            self.rfid_mifare_data_validity = rfid_mifare_data_validity
        if rfid_mifare_data is not None:
            self.rfid_mifare_data = rfid_mifare_data
        if rfid_ef_com is not None:
            self.rfid_ef_com = rfid_ef_com
        if rfid_dg1 is not None:
            self.rfid_dg1 = rfid_dg1
        if rfid_dg2 is not None:
            self.rfid_dg2 = rfid_dg2
        if rfid_dg3 is not None:
            self.rfid_dg3 = rfid_dg3
        if rfid_dg4 is not None:
            self.rfid_dg4 = rfid_dg4
        if rfid_dg5 is not None:
            self.rfid_dg5 = rfid_dg5
        if rfid_dg6 is not None:
            self.rfid_dg6 = rfid_dg6
        if rfid_dg7 is not None:
            self.rfid_dg7 = rfid_dg7
        if rfid_dg8 is not None:
            self.rfid_dg8 = rfid_dg8
        if rfid_dg9 is not None:
            self.rfid_dg9 = rfid_dg9
        if rfid_dg10 is not None:
            self.rfid_dg10 = rfid_dg10
        if rfid_dg11 is not None:
            self.rfid_dg11 = rfid_dg11
        if rfid_dg12 is not None:
            self.rfid_dg12 = rfid_dg12
        if rfid_dg13 is not None:
            self.rfid_dg13 = rfid_dg13
        if rfid_dg14 is not None:
            self.rfid_dg14 = rfid_dg14
        if rfid_dg15 is not None:
            self.rfid_dg15 = rfid_dg15
        if rfid_dg16 is not None:
            self.rfid_dg16 = rfid_dg16
        if rfid_ef_sod is not None:
            self.rfid_ef_sod = rfid_ef_sod
        if e_id_dg1 is not None:
            self.e_id_dg1 = e_id_dg1
        if e_id_dg2 is not None:
            self.e_id_dg2 = e_id_dg2
        if e_id_dg3 is not None:
            self.e_id_dg3 = e_id_dg3
        if e_id_dg4 is not None:
            self.e_id_dg4 = e_id_dg4
        if e_id_dg5 is not None:
            self.e_id_dg5 = e_id_dg5
        if e_id_dg6 is not None:
            self.e_id_dg6 = e_id_dg6
        if e_id_dg7 is not None:
            self.e_id_dg7 = e_id_dg7
        if e_id_dg8 is not None:
            self.e_id_dg8 = e_id_dg8
        if e_id_dg9 is not None:
            self.e_id_dg9 = e_id_dg9
        if e_id_dg10 is not None:
            self.e_id_dg10 = e_id_dg10
        if e_id_dg11 is not None:
            self.e_id_dg11 = e_id_dg11
        if e_id_dg12 is not None:
            self.e_id_dg12 = e_id_dg12
        if e_id_dg13 is not None:
            self.e_id_dg13 = e_id_dg13
        if e_id_dg14 is not None:
            self.e_id_dg14 = e_id_dg14
        if e_id_dg15 is not None:
            self.e_id_dg15 = e_id_dg15
        if e_id_dg16 is not None:
            self.e_id_dg16 = e_id_dg16
        if e_id_dg17 is not None:
            self.e_id_dg17 = e_id_dg17
        if e_id_dg18 is not None:
            self.e_id_dg18 = e_id_dg18
        if e_id_dg19 is not None:
            self.e_id_dg19 = e_id_dg19
        if e_id_dg20 is not None:
            self.e_id_dg20 = e_id_dg20
        if e_id_dg21 is not None:
            self.e_id_dg21 = e_id_dg21
        if e_dl_com is not None:
            self.e_dl_com = e_dl_com
        if e_dl_sod is not None:
            self.e_dl_sod = e_dl_sod
        if e_dl_dg1 is not None:
            self.e_dl_dg1 = e_dl_dg1
        if e_dl_dg2 is not None:
            self.e_dl_dg2 = e_dl_dg2
        if e_dl_dg3 is not None:
            self.e_dl_dg3 = e_dl_dg3
        if e_dl_dg4 is not None:
            self.e_dl_dg4 = e_dl_dg4
        if e_dl_dg5 is not None:
            self.e_dl_dg5 = e_dl_dg5
        if e_dl_dg6 is not None:
            self.e_dl_dg6 = e_dl_dg6
        if e_dl_dg7 is not None:
            self.e_dl_dg7 = e_dl_dg7
        if e_dl_dg8 is not None:
            self.e_dl_dg8 = e_dl_dg8
        if e_dl_dg9 is not None:
            self.e_dl_dg9 = e_dl_dg9
        if e_dl_dg10 is not None:
            self.e_dl_dg10 = e_dl_dg10
        if e_dl_dg11 is not None:
            self.e_dl_dg11 = e_dl_dg11
        if e_dl_dg12 is not None:
            self.e_dl_dg12 = e_dl_dg12
        if e_dl_dg13 is not None:
            self.e_dl_dg13 = e_dl_dg13
        if e_dl_dg14 is not None:
            self.e_dl_dg14 = e_dl_dg14
        if visible_digital_seal is not None:
            self.visible_digital_seal = visible_digital_seal
        if visible_digital_seal_nc is not None:
            self.visible_digital_seal_nc = visible_digital_seal_nc
        if digital_signature is not None:
            self.digital_signature = digital_signature
        if rfid_session_data is not None:
            self.rfid_session_data = rfid_session_data
        if rfid_session_data_status is not None:
            self.rfid_session_data_status = rfid_session_data_status
        if rfid_e_passp_directory is not None:
            self.rfid_e_passp_directory = rfid_e_passp_directory

    @property
    def rfid_authentication_info(self):
        """Gets the rfid_authentication_info of this BinaryData.  # noqa: E501


        :return: The rfid_authentication_info of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_authentication_info

    @rfid_authentication_info.setter
    def rfid_authentication_info(self, rfid_authentication_info):
        """Sets the rfid_authentication_info of this BinaryData.


        :param rfid_authentication_info: The rfid_authentication_info of this BinaryData.  # noqa: E501
        :type rfid_authentication_info: dict(str, object)
        """

        self._rfid_authentication_info = rfid_authentication_info

    @property
    def rfid_mifare_data_validity(self):
        """Gets the rfid_mifare_data_validity of this BinaryData.  # noqa: E501


        :return: The rfid_mifare_data_validity of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_mifare_data_validity

    @rfid_mifare_data_validity.setter
    def rfid_mifare_data_validity(self, rfid_mifare_data_validity):
        """Sets the rfid_mifare_data_validity of this BinaryData.


        :param rfid_mifare_data_validity: The rfid_mifare_data_validity of this BinaryData.  # noqa: E501
        :type rfid_mifare_data_validity: dict(str, object)
        """

        self._rfid_mifare_data_validity = rfid_mifare_data_validity

    @property
    def rfid_mifare_data(self):
        """Gets the rfid_mifare_data of this BinaryData.  # noqa: E501


        :return: The rfid_mifare_data of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_mifare_data

    @rfid_mifare_data.setter
    def rfid_mifare_data(self, rfid_mifare_data):
        """Sets the rfid_mifare_data of this BinaryData.


        :param rfid_mifare_data: The rfid_mifare_data of this BinaryData.  # noqa: E501
        :type rfid_mifare_data: dict(str, object)
        """

        self._rfid_mifare_data = rfid_mifare_data

    @property
    def rfid_ef_com(self):
        """Gets the rfid_ef_com of this BinaryData.  # noqa: E501


        :return: The rfid_ef_com of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_ef_com

    @rfid_ef_com.setter
    def rfid_ef_com(self, rfid_ef_com):
        """Sets the rfid_ef_com of this BinaryData.


        :param rfid_ef_com: The rfid_ef_com of this BinaryData.  # noqa: E501
        :type rfid_ef_com: dict(str, object)
        """

        self._rfid_ef_com = rfid_ef_com

    @property
    def rfid_dg1(self):
        """Gets the rfid_dg1 of this BinaryData.  # noqa: E501


        :return: The rfid_dg1 of this BinaryData.  # noqa: E501
        :rtype: RfidDG1
        """
        return self._rfid_dg1

    @rfid_dg1.setter
    def rfid_dg1(self, rfid_dg1):
        """Sets the rfid_dg1 of this BinaryData.


        :param rfid_dg1: The rfid_dg1 of this BinaryData.  # noqa: E501
        :type rfid_dg1: RfidDG1
        """

        self._rfid_dg1 = rfid_dg1

    @property
    def rfid_dg2(self):
        """Gets the rfid_dg2 of this BinaryData.  # noqa: E501


        :return: The rfid_dg2 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg2

    @rfid_dg2.setter
    def rfid_dg2(self, rfid_dg2):
        """Sets the rfid_dg2 of this BinaryData.


        :param rfid_dg2: The rfid_dg2 of this BinaryData.  # noqa: E501
        :type rfid_dg2: dict(str, object)
        """

        self._rfid_dg2 = rfid_dg2

    @property
    def rfid_dg3(self):
        """Gets the rfid_dg3 of this BinaryData.  # noqa: E501


        :return: The rfid_dg3 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg3

    @rfid_dg3.setter
    def rfid_dg3(self, rfid_dg3):
        """Sets the rfid_dg3 of this BinaryData.


        :param rfid_dg3: The rfid_dg3 of this BinaryData.  # noqa: E501
        :type rfid_dg3: dict(str, object)
        """

        self._rfid_dg3 = rfid_dg3

    @property
    def rfid_dg4(self):
        """Gets the rfid_dg4 of this BinaryData.  # noqa: E501


        :return: The rfid_dg4 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg4

    @rfid_dg4.setter
    def rfid_dg4(self, rfid_dg4):
        """Sets the rfid_dg4 of this BinaryData.


        :param rfid_dg4: The rfid_dg4 of this BinaryData.  # noqa: E501
        :type rfid_dg4: dict(str, object)
        """

        self._rfid_dg4 = rfid_dg4

    @property
    def rfid_dg5(self):
        """Gets the rfid_dg5 of this BinaryData.  # noqa: E501


        :return: The rfid_dg5 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg5

    @rfid_dg5.setter
    def rfid_dg5(self, rfid_dg5):
        """Sets the rfid_dg5 of this BinaryData.


        :param rfid_dg5: The rfid_dg5 of this BinaryData.  # noqa: E501
        :type rfid_dg5: dict(str, object)
        """

        self._rfid_dg5 = rfid_dg5

    @property
    def rfid_dg6(self):
        """Gets the rfid_dg6 of this BinaryData.  # noqa: E501


        :return: The rfid_dg6 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg6

    @rfid_dg6.setter
    def rfid_dg6(self, rfid_dg6):
        """Sets the rfid_dg6 of this BinaryData.


        :param rfid_dg6: The rfid_dg6 of this BinaryData.  # noqa: E501
        :type rfid_dg6: dict(str, object)
        """

        self._rfid_dg6 = rfid_dg6

    @property
    def rfid_dg7(self):
        """Gets the rfid_dg7 of this BinaryData.  # noqa: E501


        :return: The rfid_dg7 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg7

    @rfid_dg7.setter
    def rfid_dg7(self, rfid_dg7):
        """Sets the rfid_dg7 of this BinaryData.


        :param rfid_dg7: The rfid_dg7 of this BinaryData.  # noqa: E501
        :type rfid_dg7: dict(str, object)
        """

        self._rfid_dg7 = rfid_dg7

    @property
    def rfid_dg8(self):
        """Gets the rfid_dg8 of this BinaryData.  # noqa: E501


        :return: The rfid_dg8 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg8

    @rfid_dg8.setter
    def rfid_dg8(self, rfid_dg8):
        """Sets the rfid_dg8 of this BinaryData.


        :param rfid_dg8: The rfid_dg8 of this BinaryData.  # noqa: E501
        :type rfid_dg8: dict(str, object)
        """

        self._rfid_dg8 = rfid_dg8

    @property
    def rfid_dg9(self):
        """Gets the rfid_dg9 of this BinaryData.  # noqa: E501


        :return: The rfid_dg9 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg9

    @rfid_dg9.setter
    def rfid_dg9(self, rfid_dg9):
        """Sets the rfid_dg9 of this BinaryData.


        :param rfid_dg9: The rfid_dg9 of this BinaryData.  # noqa: E501
        :type rfid_dg9: dict(str, object)
        """

        self._rfid_dg9 = rfid_dg9

    @property
    def rfid_dg10(self):
        """Gets the rfid_dg10 of this BinaryData.  # noqa: E501


        :return: The rfid_dg10 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg10

    @rfid_dg10.setter
    def rfid_dg10(self, rfid_dg10):
        """Sets the rfid_dg10 of this BinaryData.


        :param rfid_dg10: The rfid_dg10 of this BinaryData.  # noqa: E501
        :type rfid_dg10: dict(str, object)
        """

        self._rfid_dg10 = rfid_dg10

    @property
    def rfid_dg11(self):
        """Gets the rfid_dg11 of this BinaryData.  # noqa: E501


        :return: The rfid_dg11 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg11

    @rfid_dg11.setter
    def rfid_dg11(self, rfid_dg11):
        """Sets the rfid_dg11 of this BinaryData.


        :param rfid_dg11: The rfid_dg11 of this BinaryData.  # noqa: E501
        :type rfid_dg11: dict(str, object)
        """

        self._rfid_dg11 = rfid_dg11

    @property
    def rfid_dg12(self):
        """Gets the rfid_dg12 of this BinaryData.  # noqa: E501


        :return: The rfid_dg12 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg12

    @rfid_dg12.setter
    def rfid_dg12(self, rfid_dg12):
        """Sets the rfid_dg12 of this BinaryData.


        :param rfid_dg12: The rfid_dg12 of this BinaryData.  # noqa: E501
        :type rfid_dg12: dict(str, object)
        """

        self._rfid_dg12 = rfid_dg12

    @property
    def rfid_dg13(self):
        """Gets the rfid_dg13 of this BinaryData.  # noqa: E501


        :return: The rfid_dg13 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg13

    @rfid_dg13.setter
    def rfid_dg13(self, rfid_dg13):
        """Sets the rfid_dg13 of this BinaryData.


        :param rfid_dg13: The rfid_dg13 of this BinaryData.  # noqa: E501
        :type rfid_dg13: dict(str, object)
        """

        self._rfid_dg13 = rfid_dg13

    @property
    def rfid_dg14(self):
        """Gets the rfid_dg14 of this BinaryData.  # noqa: E501


        :return: The rfid_dg14 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg14

    @rfid_dg14.setter
    def rfid_dg14(self, rfid_dg14):
        """Sets the rfid_dg14 of this BinaryData.


        :param rfid_dg14: The rfid_dg14 of this BinaryData.  # noqa: E501
        :type rfid_dg14: dict(str, object)
        """

        self._rfid_dg14 = rfid_dg14

    @property
    def rfid_dg15(self):
        """Gets the rfid_dg15 of this BinaryData.  # noqa: E501


        :return: The rfid_dg15 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg15

    @rfid_dg15.setter
    def rfid_dg15(self, rfid_dg15):
        """Sets the rfid_dg15 of this BinaryData.


        :param rfid_dg15: The rfid_dg15 of this BinaryData.  # noqa: E501
        :type rfid_dg15: dict(str, object)
        """

        self._rfid_dg15 = rfid_dg15

    @property
    def rfid_dg16(self):
        """Gets the rfid_dg16 of this BinaryData.  # noqa: E501


        :return: The rfid_dg16 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_dg16

    @rfid_dg16.setter
    def rfid_dg16(self, rfid_dg16):
        """Sets the rfid_dg16 of this BinaryData.


        :param rfid_dg16: The rfid_dg16 of this BinaryData.  # noqa: E501
        :type rfid_dg16: dict(str, object)
        """

        self._rfid_dg16 = rfid_dg16

    @property
    def rfid_ef_sod(self):
        """Gets the rfid_ef_sod of this BinaryData.  # noqa: E501


        :return: The rfid_ef_sod of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._rfid_ef_sod

    @rfid_ef_sod.setter
    def rfid_ef_sod(self, rfid_ef_sod):
        """Sets the rfid_ef_sod of this BinaryData.


        :param rfid_ef_sod: The rfid_ef_sod of this BinaryData.  # noqa: E501
        :type rfid_ef_sod: dict(str, object)
        """

        self._rfid_ef_sod = rfid_ef_sod

    @property
    def e_id_dg1(self):
        """Gets the e_id_dg1 of this BinaryData.  # noqa: E501


        :return: The e_id_dg1 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg1

    @e_id_dg1.setter
    def e_id_dg1(self, e_id_dg1):
        """Sets the e_id_dg1 of this BinaryData.


        :param e_id_dg1: The e_id_dg1 of this BinaryData.  # noqa: E501
        :type e_id_dg1: dict(str, object)
        """

        self._e_id_dg1 = e_id_dg1

    @property
    def e_id_dg2(self):
        """Gets the e_id_dg2 of this BinaryData.  # noqa: E501


        :return: The e_id_dg2 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg2

    @e_id_dg2.setter
    def e_id_dg2(self, e_id_dg2):
        """Sets the e_id_dg2 of this BinaryData.


        :param e_id_dg2: The e_id_dg2 of this BinaryData.  # noqa: E501
        :type e_id_dg2: dict(str, object)
        """

        self._e_id_dg2 = e_id_dg2

    @property
    def e_id_dg3(self):
        """Gets the e_id_dg3 of this BinaryData.  # noqa: E501


        :return: The e_id_dg3 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg3

    @e_id_dg3.setter
    def e_id_dg3(self, e_id_dg3):
        """Sets the e_id_dg3 of this BinaryData.


        :param e_id_dg3: The e_id_dg3 of this BinaryData.  # noqa: E501
        :type e_id_dg3: dict(str, object)
        """

        self._e_id_dg3 = e_id_dg3

    @property
    def e_id_dg4(self):
        """Gets the e_id_dg4 of this BinaryData.  # noqa: E501


        :return: The e_id_dg4 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg4

    @e_id_dg4.setter
    def e_id_dg4(self, e_id_dg4):
        """Sets the e_id_dg4 of this BinaryData.


        :param e_id_dg4: The e_id_dg4 of this BinaryData.  # noqa: E501
        :type e_id_dg4: dict(str, object)
        """

        self._e_id_dg4 = e_id_dg4

    @property
    def e_id_dg5(self):
        """Gets the e_id_dg5 of this BinaryData.  # noqa: E501


        :return: The e_id_dg5 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg5

    @e_id_dg5.setter
    def e_id_dg5(self, e_id_dg5):
        """Sets the e_id_dg5 of this BinaryData.


        :param e_id_dg5: The e_id_dg5 of this BinaryData.  # noqa: E501
        :type e_id_dg5: dict(str, object)
        """

        self._e_id_dg5 = e_id_dg5

    @property
    def e_id_dg6(self):
        """Gets the e_id_dg6 of this BinaryData.  # noqa: E501


        :return: The e_id_dg6 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg6

    @e_id_dg6.setter
    def e_id_dg6(self, e_id_dg6):
        """Sets the e_id_dg6 of this BinaryData.


        :param e_id_dg6: The e_id_dg6 of this BinaryData.  # noqa: E501
        :type e_id_dg6: dict(str, object)
        """

        self._e_id_dg6 = e_id_dg6

    @property
    def e_id_dg7(self):
        """Gets the e_id_dg7 of this BinaryData.  # noqa: E501


        :return: The e_id_dg7 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg7

    @e_id_dg7.setter
    def e_id_dg7(self, e_id_dg7):
        """Sets the e_id_dg7 of this BinaryData.


        :param e_id_dg7: The e_id_dg7 of this BinaryData.  # noqa: E501
        :type e_id_dg7: dict(str, object)
        """

        self._e_id_dg7 = e_id_dg7

    @property
    def e_id_dg8(self):
        """Gets the e_id_dg8 of this BinaryData.  # noqa: E501


        :return: The e_id_dg8 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg8

    @e_id_dg8.setter
    def e_id_dg8(self, e_id_dg8):
        """Sets the e_id_dg8 of this BinaryData.


        :param e_id_dg8: The e_id_dg8 of this BinaryData.  # noqa: E501
        :type e_id_dg8: dict(str, object)
        """

        self._e_id_dg8 = e_id_dg8

    @property
    def e_id_dg9(self):
        """Gets the e_id_dg9 of this BinaryData.  # noqa: E501


        :return: The e_id_dg9 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg9

    @e_id_dg9.setter
    def e_id_dg9(self, e_id_dg9):
        """Sets the e_id_dg9 of this BinaryData.


        :param e_id_dg9: The e_id_dg9 of this BinaryData.  # noqa: E501
        :type e_id_dg9: dict(str, object)
        """

        self._e_id_dg9 = e_id_dg9

    @property
    def e_id_dg10(self):
        """Gets the e_id_dg10 of this BinaryData.  # noqa: E501


        :return: The e_id_dg10 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg10

    @e_id_dg10.setter
    def e_id_dg10(self, e_id_dg10):
        """Sets the e_id_dg10 of this BinaryData.


        :param e_id_dg10: The e_id_dg10 of this BinaryData.  # noqa: E501
        :type e_id_dg10: dict(str, object)
        """

        self._e_id_dg10 = e_id_dg10

    @property
    def e_id_dg11(self):
        """Gets the e_id_dg11 of this BinaryData.  # noqa: E501


        :return: The e_id_dg11 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg11

    @e_id_dg11.setter
    def e_id_dg11(self, e_id_dg11):
        """Sets the e_id_dg11 of this BinaryData.


        :param e_id_dg11: The e_id_dg11 of this BinaryData.  # noqa: E501
        :type e_id_dg11: dict(str, object)
        """

        self._e_id_dg11 = e_id_dg11

    @property
    def e_id_dg12(self):
        """Gets the e_id_dg12 of this BinaryData.  # noqa: E501


        :return: The e_id_dg12 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg12

    @e_id_dg12.setter
    def e_id_dg12(self, e_id_dg12):
        """Sets the e_id_dg12 of this BinaryData.


        :param e_id_dg12: The e_id_dg12 of this BinaryData.  # noqa: E501
        :type e_id_dg12: dict(str, object)
        """

        self._e_id_dg12 = e_id_dg12

    @property
    def e_id_dg13(self):
        """Gets the e_id_dg13 of this BinaryData.  # noqa: E501


        :return: The e_id_dg13 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg13

    @e_id_dg13.setter
    def e_id_dg13(self, e_id_dg13):
        """Sets the e_id_dg13 of this BinaryData.


        :param e_id_dg13: The e_id_dg13 of this BinaryData.  # noqa: E501
        :type e_id_dg13: dict(str, object)
        """

        self._e_id_dg13 = e_id_dg13

    @property
    def e_id_dg14(self):
        """Gets the e_id_dg14 of this BinaryData.  # noqa: E501


        :return: The e_id_dg14 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg14

    @e_id_dg14.setter
    def e_id_dg14(self, e_id_dg14):
        """Sets the e_id_dg14 of this BinaryData.


        :param e_id_dg14: The e_id_dg14 of this BinaryData.  # noqa: E501
        :type e_id_dg14: dict(str, object)
        """

        self._e_id_dg14 = e_id_dg14

    @property
    def e_id_dg15(self):
        """Gets the e_id_dg15 of this BinaryData.  # noqa: E501


        :return: The e_id_dg15 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg15

    @e_id_dg15.setter
    def e_id_dg15(self, e_id_dg15):
        """Sets the e_id_dg15 of this BinaryData.


        :param e_id_dg15: The e_id_dg15 of this BinaryData.  # noqa: E501
        :type e_id_dg15: dict(str, object)
        """

        self._e_id_dg15 = e_id_dg15

    @property
    def e_id_dg16(self):
        """Gets the e_id_dg16 of this BinaryData.  # noqa: E501


        :return: The e_id_dg16 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg16

    @e_id_dg16.setter
    def e_id_dg16(self, e_id_dg16):
        """Sets the e_id_dg16 of this BinaryData.


        :param e_id_dg16: The e_id_dg16 of this BinaryData.  # noqa: E501
        :type e_id_dg16: dict(str, object)
        """

        self._e_id_dg16 = e_id_dg16

    @property
    def e_id_dg17(self):
        """Gets the e_id_dg17 of this BinaryData.  # noqa: E501


        :return: The e_id_dg17 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg17

    @e_id_dg17.setter
    def e_id_dg17(self, e_id_dg17):
        """Sets the e_id_dg17 of this BinaryData.


        :param e_id_dg17: The e_id_dg17 of this BinaryData.  # noqa: E501
        :type e_id_dg17: dict(str, object)
        """

        self._e_id_dg17 = e_id_dg17

    @property
    def e_id_dg18(self):
        """Gets the e_id_dg18 of this BinaryData.  # noqa: E501


        :return: The e_id_dg18 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg18

    @e_id_dg18.setter
    def e_id_dg18(self, e_id_dg18):
        """Sets the e_id_dg18 of this BinaryData.


        :param e_id_dg18: The e_id_dg18 of this BinaryData.  # noqa: E501
        :type e_id_dg18: dict(str, object)
        """

        self._e_id_dg18 = e_id_dg18

    @property
    def e_id_dg19(self):
        """Gets the e_id_dg19 of this BinaryData.  # noqa: E501


        :return: The e_id_dg19 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg19

    @e_id_dg19.setter
    def e_id_dg19(self, e_id_dg19):
        """Sets the e_id_dg19 of this BinaryData.


        :param e_id_dg19: The e_id_dg19 of this BinaryData.  # noqa: E501
        :type e_id_dg19: dict(str, object)
        """

        self._e_id_dg19 = e_id_dg19

    @property
    def e_id_dg20(self):
        """Gets the e_id_dg20 of this BinaryData.  # noqa: E501


        :return: The e_id_dg20 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg20

    @e_id_dg20.setter
    def e_id_dg20(self, e_id_dg20):
        """Sets the e_id_dg20 of this BinaryData.


        :param e_id_dg20: The e_id_dg20 of this BinaryData.  # noqa: E501
        :type e_id_dg20: dict(str, object)
        """

        self._e_id_dg20 = e_id_dg20

    @property
    def e_id_dg21(self):
        """Gets the e_id_dg21 of this BinaryData.  # noqa: E501


        :return: The e_id_dg21 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_id_dg21

    @e_id_dg21.setter
    def e_id_dg21(self, e_id_dg21):
        """Sets the e_id_dg21 of this BinaryData.


        :param e_id_dg21: The e_id_dg21 of this BinaryData.  # noqa: E501
        :type e_id_dg21: dict(str, object)
        """

        self._e_id_dg21 = e_id_dg21

    @property
    def e_dl_com(self):
        """Gets the e_dl_com of this BinaryData.  # noqa: E501


        :return: The e_dl_com of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_com

    @e_dl_com.setter
    def e_dl_com(self, e_dl_com):
        """Sets the e_dl_com of this BinaryData.


        :param e_dl_com: The e_dl_com of this BinaryData.  # noqa: E501
        :type e_dl_com: dict(str, object)
        """

        self._e_dl_com = e_dl_com

    @property
    def e_dl_sod(self):
        """Gets the e_dl_sod of this BinaryData.  # noqa: E501


        :return: The e_dl_sod of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_sod

    @e_dl_sod.setter
    def e_dl_sod(self, e_dl_sod):
        """Sets the e_dl_sod of this BinaryData.


        :param e_dl_sod: The e_dl_sod of this BinaryData.  # noqa: E501
        :type e_dl_sod: dict(str, object)
        """

        self._e_dl_sod = e_dl_sod

    @property
    def e_dl_dg1(self):
        """Gets the e_dl_dg1 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg1 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg1

    @e_dl_dg1.setter
    def e_dl_dg1(self, e_dl_dg1):
        """Sets the e_dl_dg1 of this BinaryData.


        :param e_dl_dg1: The e_dl_dg1 of this BinaryData.  # noqa: E501
        :type e_dl_dg1: dict(str, object)
        """

        self._e_dl_dg1 = e_dl_dg1

    @property
    def e_dl_dg2(self):
        """Gets the e_dl_dg2 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg2 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg2

    @e_dl_dg2.setter
    def e_dl_dg2(self, e_dl_dg2):
        """Sets the e_dl_dg2 of this BinaryData.


        :param e_dl_dg2: The e_dl_dg2 of this BinaryData.  # noqa: E501
        :type e_dl_dg2: dict(str, object)
        """

        self._e_dl_dg2 = e_dl_dg2

    @property
    def e_dl_dg3(self):
        """Gets the e_dl_dg3 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg3 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg3

    @e_dl_dg3.setter
    def e_dl_dg3(self, e_dl_dg3):
        """Sets the e_dl_dg3 of this BinaryData.


        :param e_dl_dg3: The e_dl_dg3 of this BinaryData.  # noqa: E501
        :type e_dl_dg3: dict(str, object)
        """

        self._e_dl_dg3 = e_dl_dg3

    @property
    def e_dl_dg4(self):
        """Gets the e_dl_dg4 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg4 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg4

    @e_dl_dg4.setter
    def e_dl_dg4(self, e_dl_dg4):
        """Sets the e_dl_dg4 of this BinaryData.


        :param e_dl_dg4: The e_dl_dg4 of this BinaryData.  # noqa: E501
        :type e_dl_dg4: dict(str, object)
        """

        self._e_dl_dg4 = e_dl_dg4

    @property
    def e_dl_dg5(self):
        """Gets the e_dl_dg5 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg5 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg5

    @e_dl_dg5.setter
    def e_dl_dg5(self, e_dl_dg5):
        """Sets the e_dl_dg5 of this BinaryData.


        :param e_dl_dg5: The e_dl_dg5 of this BinaryData.  # noqa: E501
        :type e_dl_dg5: dict(str, object)
        """

        self._e_dl_dg5 = e_dl_dg5

    @property
    def e_dl_dg6(self):
        """Gets the e_dl_dg6 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg6 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg6

    @e_dl_dg6.setter
    def e_dl_dg6(self, e_dl_dg6):
        """Sets the e_dl_dg6 of this BinaryData.


        :param e_dl_dg6: The e_dl_dg6 of this BinaryData.  # noqa: E501
        :type e_dl_dg6: dict(str, object)
        """

        self._e_dl_dg6 = e_dl_dg6

    @property
    def e_dl_dg7(self):
        """Gets the e_dl_dg7 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg7 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg7

    @e_dl_dg7.setter
    def e_dl_dg7(self, e_dl_dg7):
        """Sets the e_dl_dg7 of this BinaryData.


        :param e_dl_dg7: The e_dl_dg7 of this BinaryData.  # noqa: E501
        :type e_dl_dg7: dict(str, object)
        """

        self._e_dl_dg7 = e_dl_dg7

    @property
    def e_dl_dg8(self):
        """Gets the e_dl_dg8 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg8 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg8

    @e_dl_dg8.setter
    def e_dl_dg8(self, e_dl_dg8):
        """Sets the e_dl_dg8 of this BinaryData.


        :param e_dl_dg8: The e_dl_dg8 of this BinaryData.  # noqa: E501
        :type e_dl_dg8: dict(str, object)
        """

        self._e_dl_dg8 = e_dl_dg8

    @property
    def e_dl_dg9(self):
        """Gets the e_dl_dg9 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg9 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg9

    @e_dl_dg9.setter
    def e_dl_dg9(self, e_dl_dg9):
        """Sets the e_dl_dg9 of this BinaryData.


        :param e_dl_dg9: The e_dl_dg9 of this BinaryData.  # noqa: E501
        :type e_dl_dg9: dict(str, object)
        """

        self._e_dl_dg9 = e_dl_dg9

    @property
    def e_dl_dg10(self):
        """Gets the e_dl_dg10 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg10 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg10

    @e_dl_dg10.setter
    def e_dl_dg10(self, e_dl_dg10):
        """Sets the e_dl_dg10 of this BinaryData.


        :param e_dl_dg10: The e_dl_dg10 of this BinaryData.  # noqa: E501
        :type e_dl_dg10: dict(str, object)
        """

        self._e_dl_dg10 = e_dl_dg10

    @property
    def e_dl_dg11(self):
        """Gets the e_dl_dg11 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg11 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg11

    @e_dl_dg11.setter
    def e_dl_dg11(self, e_dl_dg11):
        """Sets the e_dl_dg11 of this BinaryData.


        :param e_dl_dg11: The e_dl_dg11 of this BinaryData.  # noqa: E501
        :type e_dl_dg11: dict(str, object)
        """

        self._e_dl_dg11 = e_dl_dg11

    @property
    def e_dl_dg12(self):
        """Gets the e_dl_dg12 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg12 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg12

    @e_dl_dg12.setter
    def e_dl_dg12(self, e_dl_dg12):
        """Sets the e_dl_dg12 of this BinaryData.


        :param e_dl_dg12: The e_dl_dg12 of this BinaryData.  # noqa: E501
        :type e_dl_dg12: dict(str, object)
        """

        self._e_dl_dg12 = e_dl_dg12

    @property
    def e_dl_dg13(self):
        """Gets the e_dl_dg13 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg13 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg13

    @e_dl_dg13.setter
    def e_dl_dg13(self, e_dl_dg13):
        """Sets the e_dl_dg13 of this BinaryData.


        :param e_dl_dg13: The e_dl_dg13 of this BinaryData.  # noqa: E501
        :type e_dl_dg13: dict(str, object)
        """

        self._e_dl_dg13 = e_dl_dg13

    @property
    def e_dl_dg14(self):
        """Gets the e_dl_dg14 of this BinaryData.  # noqa: E501


        :return: The e_dl_dg14 of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._e_dl_dg14

    @e_dl_dg14.setter
    def e_dl_dg14(self, e_dl_dg14):
        """Sets the e_dl_dg14 of this BinaryData.


        :param e_dl_dg14: The e_dl_dg14 of this BinaryData.  # noqa: E501
        :type e_dl_dg14: dict(str, object)
        """

        self._e_dl_dg14 = e_dl_dg14

    @property
    def visible_digital_seal(self):
        """Gets the visible_digital_seal of this BinaryData.  # noqa: E501


        :return: The visible_digital_seal of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._visible_digital_seal

    @visible_digital_seal.setter
    def visible_digital_seal(self, visible_digital_seal):
        """Sets the visible_digital_seal of this BinaryData.


        :param visible_digital_seal: The visible_digital_seal of this BinaryData.  # noqa: E501
        :type visible_digital_seal: dict(str, object)
        """

        self._visible_digital_seal = visible_digital_seal

    @property
    def visible_digital_seal_nc(self):
        """Gets the visible_digital_seal_nc of this BinaryData.  # noqa: E501


        :return: The visible_digital_seal_nc of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._visible_digital_seal_nc

    @visible_digital_seal_nc.setter
    def visible_digital_seal_nc(self, visible_digital_seal_nc):
        """Sets the visible_digital_seal_nc of this BinaryData.


        :param visible_digital_seal_nc: The visible_digital_seal_nc of this BinaryData.  # noqa: E501
        :type visible_digital_seal_nc: dict(str, object)
        """

        self._visible_digital_seal_nc = visible_digital_seal_nc

    @property
    def digital_signature(self):
        """Gets the digital_signature of this BinaryData.  # noqa: E501


        :return: The digital_signature of this BinaryData.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._digital_signature

    @digital_signature.setter
    def digital_signature(self, digital_signature):
        """Sets the digital_signature of this BinaryData.


        :param digital_signature: The digital_signature of this BinaryData.  # noqa: E501
        :type digital_signature: dict(str, object)
        """

        self._digital_signature = digital_signature

    @property
    def rfid_session_data(self):
        """Gets the rfid_session_data of this BinaryData.  # noqa: E501


        :return: The rfid_session_data of this BinaryData.  # noqa: E501
        :rtype: RfidSessionData
        """
        return self._rfid_session_data

    @rfid_session_data.setter
    def rfid_session_data(self, rfid_session_data):
        """Sets the rfid_session_data of this BinaryData.


        :param rfid_session_data: The rfid_session_data of this BinaryData.  # noqa: E501
        :type rfid_session_data: RfidSessionData
        """

        self._rfid_session_data = rfid_session_data

    @property
    def rfid_session_data_status(self):
        """Gets the rfid_session_data_status of this BinaryData.  # noqa: E501


        :return: The rfid_session_data_status of this BinaryData.  # noqa: E501
        :rtype: DetailsRFID
        """
        return self._rfid_session_data_status

    @rfid_session_data_status.setter
    def rfid_session_data_status(self, rfid_session_data_status):
        """Sets the rfid_session_data_status of this BinaryData.


        :param rfid_session_data_status: The rfid_session_data_status of this BinaryData.  # noqa: E501
        :type rfid_session_data_status: DetailsRFID
        """

        self._rfid_session_data_status = rfid_session_data_status

    @property
    def rfid_e_passp_directory(self):
        """Gets the rfid_e_passp_directory of this BinaryData.  # noqa: E501

        Indexes of groups that aren't read  # noqa: E501

        :return: The rfid_e_passp_directory of this BinaryData.  # noqa: E501
        :rtype: list[RfidDataFileType]
        """
        return self._rfid_e_passp_directory

    @rfid_e_passp_directory.setter
    def rfid_e_passp_directory(self, rfid_e_passp_directory):
        """Sets the rfid_e_passp_directory of this BinaryData.

        Indexes of groups that aren't read  # noqa: E501

        :param rfid_e_passp_directory: The rfid_e_passp_directory of this BinaryData.  # noqa: E501
        :type rfid_e_passp_directory: list[RfidDataFileType]
        """

        self._rfid_e_passp_directory = rfid_e_passp_directory

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BinaryData):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, BinaryData):
            return True

        return self.to_dict() != other.to_dict()
